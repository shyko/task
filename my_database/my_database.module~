<?php
/**
 *     @file
 *     Contains base function for module
 */

/**
 *   Implements hook_menu
 */
function my_database_menu() {
$items['my_database/insert'] = array(
    'title'            => 'Page for insert data',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('my_database_insert_form'),
    'access arguments' => array('administer site configuration'),
  );
$items['my_database'] = array(
    'title'            => 'Table with data',
    'page callback'    => 'my_database_table_data_page',
    'access arguments' => array('administer site configuration'),
                             ); 
$items['my_database/%/update'] = array(
    'title'            => 'Page for update data',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('my_database_update_form', 1),
    'access arguments' => array('administer site configuration'),
                                );
$items['my_database/%/delete'] = array(
    'title'            => 'Do you really want to delete this data?',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('my_database_delete_form', 1),
    'access arguments' => array('administer site configuration'),
             );            
  return $items;
}

/**
 *   Build form for insert data
 */

function my_database_insert_form($form, $form_state) {
  $form = array();
  $form['number'] = array(
    '#title' => t('Number'),
    '#type' => 'textfield',
    '#size' => 20,
    '#maxlength' => 10,
    '#description' => t('Only numbers'),
    '#required' => TRUE,
  );
  $form['teaser'] = array(
    '#title' => t('Teaser'),
    '#type' => 'textfield',
    '#size' =>  50,
    '#maxlength' => 50,
    '#required' => TRUE,
  );
  $form['text'] = array(
    '#title' => t('Text'),
    '#type' => 'textarea',
    '#required' => TRUE,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
  return $form;
}
/**
 * Validate for my_database_insert_form.
*/
function my_database_insert_form_validate($form, &$form_state) {
  if (drupal_strlen($form_state['values']['number']) > 10) {
    form_set_error('number', t('Field "@fieldname" must be less than @c chars.',
      array('@fieldname' => t('Number'), '@c' => 10)));
  }
  elseif (!ctype_digit($form_state['values']['number'])) {
    form_set_error('number', t('Field "number" must contains an integer.'));
  }
  if (drupal_strlen($form_state['values']['teaser']) > 150) {
    form_set_error('teaser', t('Field "@fieldname" must be less than @c chars.',
      array('@fieldname' => t('Teaser'), '@c' => 150)));
  }
}
/**
 * Submit for my_database_insert_form.
 */
function my_database_insert_form_submit($form, &$form_state) {
  $query = db_insert('my_table1986')
    ->fields(array(
      'number' => $form_state['values']['number'],
      'teaser' => $form_state['values']['teaser'],
      'text'   => $form_state['values']['text'],
    ))
    ->execute();
  if ($query > 0) {
    drupal_set_message(t('Data has been successfully sent.'));
  }
  else {
    drupal_set_message(t("Data hasn't been sent."), 'error');
  }
}

/**
 *   Create my_database_table_data_page
 */
function my_database_table_data_page() {
     $header = array(t('ID'), t('Number'), t('Teaser'), t('Text'), t('Actions'));
     $rows = array();
     $query = db_select('my_table1986', 't')
           ->fields('t', array('id', 'number', 'teaser', 'text'))
           ->execute();
          while ($value = $query->fetchAssoc()) {
                  $rows[] = array(
                     $value['id'],
                     $value['number'],
                     $value['teaser'],
                     $value['text'],
                     l(t('Edit'), "my_database/{$value['id']}/update") . '<br>' . l(t('Delete'), "my_database/{$value['id']}/delete"), 
                     );
               }
     if ($rows[$value[1]] != NULL) {
    return theme('table', array('header' => $header, 'rows' => $rows));
 } else {
     return t('Table is empty');
        }
}
         
/**
 *   Page for update data
 */
function my_database_update_form($form, $form_state) {
      $form = array();
      $id = $form_state['build_info']['args'][0];
      $data = db_select('my_table1986', 'm')
            ->condition('m.id', $id)
            ->fields('m')
            ->execute()
            ->fetchAssoc();
if (empty($data) || empty($data['number'])) {
              $placeholders = array(
                                '@id' => $id,
                                '!back' => l(t('Go back'), 'my_database'),
                             );
              $form['text'] = array(
                       '#markup' => t('Undefined "@id". !back.', $placeholders),
                         );
              return $form;
 } 
     $form['number'] = array(
              '#title'         => t('Number'),
              '#type'          => 'textfield',
              '#maxlength'     => 10,
              '#size'          => 20,
              '#description'   => t('Only numbers'),
              '#required'      => TRUE,
              '#default_value' => $data['number'],
              );
     $form['teaser'] = array(
              '#title'         => t('Teaser'),
              '#type'          =>  'textfield',
              '#size'          => 30, 
              '#maxlength'     => 150,
              '#required'      => TRUE,
              '#default_value' => $data['teaser'],
              );
     $form['text'] = array(
              '#title'         => t('Text'),
              '#type'          => 'textarea',
              '#required'      => TRUE,
              '#default_value' => $data['text'],
              );
     $form['actions'] = array ('#type' => 'actions');
     $form['actions']['submit'] = array(
              '#type'          => 'submit',
              '#value'         => t('Submit'),
              );   
     $form['actions']['cancel'] = array(
              '#markup'        => l(t('Cancel'), 'my_database')
              );
     $form['#validate'][] = 'my_database_insert_form_validate';
     return $form;
}
/**
 *  Page for submit page with new data
 */              
function my_database_update_form_submit($form, &$form_state) {
     $id     = $form_state['build_info']['args'][0];
     $values = $form_state['values'];
     $query  = db_update('my_table1986')
          ->fields(array(
                     'number' => $values['number'],
                     'teaser' => $values['teaser'],
                     'text'   => $values['text'],
                  ))
          ->condition('id', $id)
          ->execute();
     if ($query) {
        drupal_set_message (t('Data updated successfully'));
     } else {
        drupal_set_message(t('Data is not updated'), 'warning');
     }
     $form_state['redirect'] = 'my_database';
}                   

/**
 *  Page for submit delete data
 */                     
function my_database_delete_form($form, $form_state) {
       $form = array();
       $form['submit'] = array(
               '#type'   => 'submit',
               '#value'  => 'Submit',
              );
       $form['cancel'] = array(
               '#markup' => l(t('Cancel'), 'my_database'),
              );
       return $form;
}
 
function my_database_delete_form_submit($form, &$form_state) {
       $id = $form_state['build_info']['args'][0];
       $result = db_delete('my_table1986')
              ->condition('id', $id)
              ->execute();
       $placeholders = array('@id' => $id);
       if ($result) {
             drupal_set_message(t('Record @id successfully removed', $placeholders));
       } else {
             drupal_set_message(t('Record @id is undefined', $placeholders), 'warning');
       }
       $form_state['redirect'] = 'my_database';
}           
                            
                        





















